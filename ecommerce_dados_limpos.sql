--create table ecommerce(
--InvoiceNo VARCHAR(200),
--StockCode VARCHAR(200),
--Quantity INT,
--InvoiceDate TIMESTAMP,
--UnitPrice DECIMAL(10, 2),
--CustomerID INT,
--Country VARCHAR(200),
--Description_official TEXT
--);
--
--create table countries(
--id serial primary key,
--country varchar(200)
--);
--
--insert
--	into
--	countries(country)
--select
--	distinct 
--e.Country
--from
--	ecommerce as e
--order by
--	e.Country asc;
--
--create table customers(
--id int primary key
--);
--
--insert
--	into
--	customers(id)
--select
--	distinct 
--e.CustomerID
--from
--	ecommerce e
--order by
--	e.customerID asc;
--
--create table country_customer(
--id_country int,
--id_customer int,
--foreign key (id_country) references countries(id),
--foreign key (id_customer) references customers(id)
--);
--
--insert
--	into
--	country_customer(id_country, id_customer)
--select
--	distinct
--c.id as id_country,
--	e.CustomerID as id_customer
--from
--	ecommerce e
--inner join 
--countries c on
--	e.country = c.country
--
--create table products(
--id varchar(200) primary key,
--description text
--);
--
--insert
--	into
--	products(id, description)
--select
--	distinct 
--e.Stockcode,
--	e.Description_official
--from
--	ecommerce e
--	
--create table invoices(
--id varchar(200) primary key,
--id_customer int,
--foreign key (id_customer) references customers(id)
--);
--
--insert
--	into
--	invoices(id, id_customer)
--select
--	distinct 
--e.InvoiceNo,
--e.CustomerID
--from
--	ecommerce e
--
--create table prod_inv( 
--id_customer int,
--id_invoice varchar(200),
--id_products varchar(200),
--quantity int,
--price decimal(10, 2),
--date timestamp,
--foreign key (id_customer) references customers(id),
--foreign key (id_invoice) references invoices(id),
--foreign key (id_products) references products(id)
--);
--
--insert into
--	prod_inv(id_customer,id_invoice, id_products, quantity, price, date)
--select distinct
--    ct.id,
--    i.id,
--	p.id,
--	e.Quantity,
--	e.UnitPrice,
--	e.InvoiceDate
--from
--	products p
--inner join ecommerce e on
--	e.StockCode = p.id
--inner join invoices i on
--	i.id = e.InvoiceNo
--inner join customers ct on 
--    ct.id = e.customerid 
--
--select
--	*
--from
--	prod_inv
